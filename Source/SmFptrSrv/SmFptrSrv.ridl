// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 25.10.2011 20:09:43 (- $Rev: 12980 $, 289071343).

[
  uuid(B082E684-3F10-4B82-8D81-79F0B2D4F0AF), 
  version(1.3), 
  helpstring("OPOS print server"), 
  control
    
]
library FptrServerLib
{

  importlib("stdole2.tlb");

  interface IFptrServer;
  coclass FptrServer;


  [
    uuid(F1005939-85FF-49AE-A535-3D024E5047E0), 
    version(1.3), 
    helpstring("OPOS print server"), 
    dual, 
    oleautomation
  ]
  interface IFptrServer: IDispatch
  {
    [id(0x00000001), helpstring("Claims device for exclusive use")]
    HRESULT _stdcall ClaimDevice([in] long PortNumber, [in] long Timeout, [out, retval] long* Value);
    [id(0x00000002), helpstring("Close serial port")]
    HRESULT _stdcall ClosePort([out, retval] long* Value);
    [id(0x00000003), helpstring("Close receipt")]
    HRESULT _stdcall CloseReceipt([out, retval] long* Value);
    [id(0x00000004), helpstring("Connect to device")]
    HRESULT _stdcall Connect([in] long AAppPID, [in] BSTR AAppName, [in] BSTR ACompName, [out, retval] long* Value);
    [id(0x00000005), helpstring("Disconnect client")]
    HRESULT _stdcall Disconnect([out, retval] long* Value);
    [id(0x00000006), helpstring("Opens serial port")]
    HRESULT _stdcall OpenPort([in] long BaudRate, [in] long Timeout, [out, retval] long* Value);
    [id(0x00000007), helpstring("Receipt is opened")]
    HRESULT _stdcall OpenReceipt([in] long Password, [out, retval] long* Value);
    [id(0x00000008), helpstring("Release device")]
    HRESULT _stdcall ReleaseDevice([out, retval] long* Value);
    [id(0x00000009), helpstring("Send command")]
    HRESULT _stdcall SendData([in] long Timeout, [in] BSTR TxData, [out] long* ResultCode, [out, retval] BSTR* Value);
    [propget, id(0x0000000A), helpstring("Client application name")]
    HRESULT _stdcall ClientAppName([out, retval] BSTR* Value);
    [propget, id(0x0000000B)]
    HRESULT _stdcall ClientCompName([out, retval] BSTR* Value);
    [propget, id(0x0000000C), helpstring("Client process ID")]
    HRESULT _stdcall ClientPID([out, retval] long* Value);
    [propget, id(0x0000000D), helpstring("Client is connected")]
    HRESULT _stdcall Connected([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x0000000E), helpstring("File version")]
    HRESULT _stdcall FileVersion([out, retval] BSTR* Value);
    [propget, id(0x0000000F), helpstring("Device is claimed")]
    HRESULT _stdcall IsClaimed([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000010), helpstring("Port is opened")]
    HRESULT _stdcall IsPortOpened([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000011), helpstring("Receipt is opened")]
    HRESULT _stdcall IsReceiptOpened([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000012), helpstring("Result code")]
    HRESULT _stdcall ResultCode([out, retval] long* Value);
    [propget, id(0x00000013), helpstring("Result description")]
    HRESULT _stdcall ResultDescription([out, retval] BSTR* Value);
  };

  [
    uuid(1064A946-8207-4DCF-97D1-8DD86D83ED9C), 
    version(1.3), 
    helpstring("OPOS print server"), 
    appobject, 
    licensed, 
    predeclid
  ]
  coclass FptrServer
  {
    [default] interface IFptrServer;
  };

};