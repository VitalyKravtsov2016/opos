// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 25.10.2011 20:09:43 (- $Rev: 12980 $, 289071171).

[
  uuid(5661B16C-C090-4085-8941-C0E63728CEF2), 
  version(1.0), 
  helpstring("ShtrihOPOS Library")
    
]
library SmFiscalPrinterLib
{

  importlib("stdole2.tlb");

  interface IFiscalPrinterService_1_12;
  interface ICashDrawer;
  interface IXmlParams;
  coclass FiscalPrinter;
  coclass CashDrawer;
  coclass XmlParams;


  [
    uuid(D40FE7C2-A378-46C5-9116-81C4E7980B9D), 
    version(1.0), 
    helpstring("IFiscalPrinter Interface"), 
    dual, 
    oleautomation
  ]
  interface IFiscalPrinterService_1_12: IDispatch
  {
    [propget, id(0x00000001), helpstring("property OpenResult")]
    HRESULT _stdcall OpenResult([out, retval] long* Value);
    [id(0x00000002), helpstring("method COFreezeEvents")]
    HRESULT _stdcall COFreezeEvents(VARIANT_BOOL Freeze, [out, retval] long* Value);
    [id(0x00000003), helpstring("method GetPropertyNumber")]
    HRESULT _stdcall GetPropertyNumber(long PropIndex, [out, retval] long* Value);
    [id(0x00000004), helpstring("method SetPropertyNumber")]
    HRESULT _stdcall SetPropertyNumber(long PropIndex, long Number);
    [id(0x00000005), helpstring("method GetPropertyString")]
    HRESULT _stdcall GetPropertyString(long PropIndex, [out, retval] BSTR* Value);
    [id(0x00000006), helpstring("method SetPropertyString")]
    HRESULT _stdcall SetPropertyString(long PropIndex, BSTR Text);
    [id(0x00000007), helpstring("method OpenService")]
    HRESULT _stdcall OpenService(BSTR DeviceClass, BSTR DeviceName,  IDispatch* pDispatch, [out, retval] long* Value);
    [id(0x00000008), helpstring("method CloseService")]
    HRESULT _stdcall CloseService([out, retval] long* Value);
    [id(0x00000009), helpstring("method CheckHealth")]
    HRESULT _stdcall CheckHealth([in] long Level, [out, retval] long* Value);
    [id(0x0000000A), helpstring("method ClaimDevice")]
    HRESULT _stdcall ClaimDevice([in] long Timeout, [out, retval] long* Value);
    [id(0x0000000B), helpstring("method ClearOutput")]
    HRESULT _stdcall ClearOutput([out, retval] long* Value);
    [id(0x0000000C), helpstring("method DirectIO")]
    HRESULT _stdcall DirectIO([in] long Command, [in, out] long* pData, [in, out] BSTR* pString, [out, retval] long* Value);
    [id(0x0000000D), helpstring("method ReleaseDevice")]
    HRESULT _stdcall ReleaseDevice([out, retval] long* Value);
    [id(0x0000000E), helpstring("method BeginFiscalDocument")]
    HRESULT _stdcall BeginFiscalDocument([in] long DocumentAmount, [out, retval] long* Value);
    [id(0x0000000F), helpstring("method BeginFiscalReceipt")]
    HRESULT _stdcall BeginFiscalReceipt([in] VARIANT_BOOL PrintHeader, [out, retval] long* Value);
    [id(0x00000010), helpstring("method BeginFixedOutput")]
    HRESULT _stdcall BeginFixedOutput([in] long Station, [in] long DocumentType, [out, retval] long* Value);
    [id(0x00000011), helpstring("method BeginInsertion")]
    HRESULT _stdcall BeginInsertion([in] long Timeout, [out, retval] long* Value);
    [id(0x00000012), helpstring("method BeginItemList")]
    HRESULT _stdcall BeginItemList([in] long VatID, [out, retval] long* Value);
    [id(0x00000013), helpstring("method BeginNonFiscal")]
    HRESULT _stdcall BeginNonFiscal([out, retval] long* Value);
    [id(0x00000014), helpstring("method BeginRemoval")]
    HRESULT _stdcall BeginRemoval([in] long Timeout, [out, retval] long* Value);
    [id(0x00000015), helpstring("method BeginTraining")]
    HRESULT _stdcall BeginTraining([out, retval] long* Value);
    [id(0x00000016), helpstring("method ClearError")]
    HRESULT _stdcall ClearError([out, retval] long* Value);
    [id(0x00000017), helpstring("method EndFiscalDocument")]
    HRESULT _stdcall EndFiscalDocument([out, retval] long* Value);
    [id(0x00000018), helpstring("method EndFiscalReceipt")]
    HRESULT _stdcall EndFiscalReceipt([in] VARIANT_BOOL PrintHeader, [out, retval] long* Value);
    [id(0x00000019), helpstring("method EndFixedOutput")]
    HRESULT _stdcall EndFixedOutput([out, retval] long* Value);
    [id(0x0000001A), helpstring("method EndInsertion")]
    HRESULT _stdcall EndInsertion([out, retval] long* Value);
    [id(0x0000001B), helpstring("method EndItemList")]
    HRESULT _stdcall EndItemList([out, retval] long* Value);
    [id(0x0000001C), helpstring("method EndNonFiscal")]
    HRESULT _stdcall EndNonFiscal([out, retval] long* Value);
    [id(0x0000001D), helpstring("method EndRemoval")]
    HRESULT _stdcall EndRemoval([out, retval] long* Value);
    [id(0x0000001E), helpstring("method EndTraining")]
    HRESULT _stdcall EndTraining([out, retval] long* Value);
    [id(0x0000001F), helpstring("method GetData")]
    HRESULT _stdcall GetData([in] long DataItem, [out] long* OptArgs, [out] BSTR* Data, [out, retval] long* Value);
    [id(0x00000020), helpstring("method GetDate")]
    HRESULT _stdcall GetDate([out] BSTR* Date, [out, retval] long* Value);
    [id(0x00000021), helpstring("method GetTotalizer")]
    HRESULT _stdcall GetTotalizer([in] long VatID, [in] long OptArgs, [out] BSTR* Data, [out, retval] long* Value);
    [id(0x00000022), helpstring("method GetVatEntry")]
    HRESULT _stdcall GetVatEntry([in] long VatID, [in] long OptArgs, [out] long* VatRate, [out, retval] long* Value);
    [id(0x00000023), helpstring("method PrintDuplicateReceipt")]
    HRESULT _stdcall PrintDuplicateReceipt([out, retval] long* Value);
    [id(0x00000024), helpstring("method PrintFiscalDocumentLine")]
    HRESULT _stdcall PrintFiscalDocumentLine([in] BSTR DocumentLine, [out, retval] long* Value);
    [id(0x00000025), helpstring("method PrintFixedOutput")]
    HRESULT _stdcall PrintFixedOutput([in] long DocumentType, [in] long LineNumber, [in] BSTR Data, [out, retval] long* Value);
    [id(0x00000026), helpstring("method PrintNormal")]
    HRESULT _stdcall PrintNormal([in] long Station, [in] BSTR Data, [out, retval] long* Value);
    [id(0x00000027), helpstring("method PrintPeriodicTotalsReport")]
    HRESULT _stdcall PrintPeriodicTotalsReport([in] BSTR Date1, [in] BSTR Date2, [out, retval] long* Value);
    [id(0x00000028), helpstring("method PrintPowerLossReport")]
    HRESULT _stdcall PrintPowerLossReport([out, retval] long* Value);
    [id(0x00000029), helpstring("method PrintRecItem")]
    HRESULT _stdcall PrintRecItem([in] BSTR Description, [in] CURRENCY Price, [in] long Quantity, [in] long VatInfo, [in] CURRENCY UnitPrice, [in] BSTR UnitName, [out, retval] long* Value);
    [id(0x0000002A), helpstring("method PrintRecItemAdjustment")]
    HRESULT _stdcall PrintRecItemAdjustment([in] long AdjustmentType, [in] BSTR Description, [in] CURRENCY Amount, [in] long VatInfo, [out, retval] long* Value);
    [id(0x0000002B), helpstring("method PrintRecMessage")]
    HRESULT _stdcall PrintRecMessage([in] BSTR Message, [out, retval] long* Value);
    [id(0x0000002C), helpstring("method PrintRecNotPaid")]
    HRESULT _stdcall PrintRecNotPaid([in] BSTR Description, [in] CURRENCY Amount, [out, retval] long* Value);
    [id(0x0000002D), helpstring("method PrintRecRefund")]
    HRESULT _stdcall PrintRecRefund([in] BSTR Description, [in] CURRENCY Amount, [in] long VatInfo, [out, retval] long* Value);
    [id(0x0000002E), helpstring("method PrintRecSubtotal")]
    HRESULT _stdcall PrintRecSubtotal([in] CURRENCY Amount, [out, retval] long* Value);
    [id(0x0000002F), helpstring("method PrintRecSubtotalAdjustment")]
    HRESULT _stdcall PrintRecSubtotalAdjustment([in] long AdjustmentType, [in] BSTR Description, [in] CURRENCY Amount, [out, retval] long* Value);
    [id(0x00000030), helpstring("method PrintRecTotal")]
    HRESULT _stdcall PrintRecTotal([in] CURRENCY Total, [in] CURRENCY Payment, [in] BSTR Description, [out, retval] long* Value);
    [id(0x00000031), helpstring("method PrintRecVoid")]
    HRESULT _stdcall PrintRecVoid([in] BSTR Description, [out, retval] long* Value);
    [id(0x00000032), helpstring("method PrintRecVoidItem")]
    HRESULT _stdcall PrintRecVoidItem([in] BSTR Description, [in] CURRENCY Amount, [in] long Quantity, [in] long AdjustmentType, [in] CURRENCY Adjustment, [in] long VatInfo, [out, retval] long* Value);
    [id(0x00000033), helpstring("method PrintReport")]
    HRESULT _stdcall PrintReport([in] long ReportType, [in] BSTR StartNum, [in] BSTR EndNum, [out, retval] long* Value);
    [id(0x00000034), helpstring("method PrintXReport")]
    HRESULT _stdcall PrintXReport([out, retval] long* Value);
    [id(0x00000035), helpstring("method PrintZReport")]
    HRESULT _stdcall PrintZReport([out, retval] long* Value);
    [id(0x00000036), helpstring("method ResetPrinter")]
    HRESULT _stdcall ResetPrinter([out, retval] long* Value);
    [id(0x00000037), helpstring("method SetDate")]
    HRESULT _stdcall SetDate([in] BSTR Date, [out, retval] long* Value);
    [id(0x00000038), helpstring("method SetHeaderLine")]
    HRESULT _stdcall SetHeaderLine([in] long LineNumber, [in] BSTR Text, [in] VARIANT_BOOL DoubleWidth, [out, retval] long* Value);
    [id(0x00000039), helpstring("method SetPOSID")]
    HRESULT _stdcall SetPOSID([in] BSTR POSID, [in] BSTR CashierID, [out, retval] long* Value);
    [id(0x0000003A), helpstring("method SetStoreFiscalID")]
    HRESULT _stdcall SetStoreFiscalID([in] BSTR ID, [out, retval] long* Value);
    [id(0x0000003B), helpstring("method SetTrailerLine")]
    HRESULT _stdcall SetTrailerLine([in] long LineNumber, [in] BSTR Text, [in] VARIANT_BOOL DoubleWidth, [out, retval] long* Value);
    [id(0x0000003C), helpstring("method SetVatTable")]
    HRESULT _stdcall SetVatTable([out, retval] long* Value);
    [id(0x0000003D), helpstring("method SetVatValue")]
    HRESULT _stdcall SetVatValue([in] long VatID, [in] BSTR VatValue, [out, retval] long* Value);
    [id(0x0000003E), helpstring("method VerifyItem")]
    HRESULT _stdcall VerifyItem([in] BSTR ItemName, [in] long VatID, [out, retval] long* Value);
    [id(0x0000003F), helpstring("method PrintRecCash")]
    HRESULT _stdcall PrintRecCash([in] CURRENCY Amount, [out, retval] long* Value);
    [id(0x00000040), helpstring("method PrintRecItemFuel")]
    HRESULT _stdcall PrintRecItemFuel([in] BSTR Description, [in] CURRENCY Price, [in] long Quantity, [in] long VatInfo, [in] CURRENCY UnitPrice, [in] BSTR UnitName, [in] CURRENCY SpecialTax, [in] BSTR SpecialTaxName, [out, retval] long* Value);
    [id(0x00000041), helpstring("method PrintRecItemFuelVoid")]
    HRESULT _stdcall PrintRecItemFuelVoid([in] BSTR Description, [in] CURRENCY Price, [in] long VatInfo, [in] CURRENCY SpecialTax, [out, retval] long* Value);
    [id(0x00000042), helpstring("method PrintRecPackageAdjustment")]
    HRESULT _stdcall PrintRecPackageAdjustment([in] long AdjustmentType, [in] BSTR Description, [in] BSTR VatAdjustment, [out, retval] long* Value);
    [id(0x00000043), helpstring("method PrintRecPackageAdjustVoid")]
    HRESULT _stdcall PrintRecPackageAdjustVoid([in] long AdjustmentType, [in] BSTR VatAdjustment, [out, retval] long* Value);
    [id(0x00000044), helpstring("method PrintRecRefundVoid")]
    HRESULT _stdcall PrintRecRefundVoid([in] BSTR Description, [in] CURRENCY Amount, [in] long VatInfo, [out, retval] long* Value);
    [id(0x00000045), helpstring("method PrintRecSubtotalAdjustVoid")]
    HRESULT _stdcall PrintRecSubtotalAdjustVoid([in] long AdjustmentType, [in] CURRENCY Amount, [out, retval] long* Value);
    [id(0x00000046), helpstring("method PrintRecTaxID")]
    HRESULT _stdcall PrintRecTaxID([in] BSTR TaxID, [out, retval] long* Value);
    [id(0x00000047), helpstring("method SetCurrency")]
    HRESULT _stdcall SetCurrency([in] long NewCurrency, [out, retval] long* Value);
    [id(0x00000050), helpstring("method GetOpenResult")]
    HRESULT _stdcall GetOpenResult([out, retval] long* Value);
    [id(0x00000051), helpstring("method Open")]
    HRESULT _stdcall Open(BSTR DeviceClass, BSTR DeviceName,  IDispatch* pDispatch, [out, retval] long* Value);
    [id(0x00000052), helpstring("method Close")]
    HRESULT _stdcall Close([out, retval] long* Value);
    [id(0x00000053), helpstring("method Claim")]
    HRESULT _stdcall Claim([in] long Timeout, [out, retval] long* Value);
    [id(0x00000054), helpstring("method Release")]
    HRESULT _stdcall Release1([out, retval] long* Value);
    [id(0x00000055), helpstring("method ResetStatistics")]
    HRESULT _stdcall ResetStatistics([in] BSTR StatisticsBuffer, [out, retval] long* Value);
    [id(0x00000056), helpstring("method RetrieveStatistics")]
    HRESULT _stdcall RetrieveStatistics([in, out] BSTR* pStatisticsBuffer, [out, retval] long* Value);
    [id(0x00000057), helpstring("method UpdateStatistics")]
    HRESULT _stdcall UpdateStatistics([in] BSTR StatisticsBuffer, [out, retval] long* Value);
    [id(0x00000058), helpstring("method CompareFirmwareVersion")]
    HRESULT _stdcall CompareFirmwareVersion([in] BSTR FirmwareFileName, [out] long* pResult, [out, retval] long* Value);
    [id(0x00000059), helpstring("method UpdateFirmware")]
    HRESULT _stdcall UpdateFirmware([in] BSTR FirmwareFileName, [out, retval] long* Value);
    [id(0x0000005A), helpstring("method PrintRecItemAdjustmentVoid")]
    HRESULT _stdcall PrintRecItemAdjustmentVoid([in] long AdjustmentType, [in] BSTR Description, [in] CURRENCY Amount, [in] long VatInfo, [out, retval] long* Value);
    [id(0x0000005B), helpstring("method PrintRecItemVoid")]
    HRESULT _stdcall PrintRecItemVoid([in] BSTR Description, [in] CURRENCY Price, [in] long Quantity, [in] long VatInfo, [in] CURRENCY UnitPrice, [in] BSTR UnitName, [out, retval] long* Value);
    [id(0x0000005C), helpstring("method PrintRecItemRefund")]
    HRESULT _stdcall PrintRecItemRefund([in] BSTR Description, [in] CURRENCY Amount, [in] long Quantity, [in] long VatInfo, [in] CURRENCY UnitAmount, [in] BSTR UnitName, [out, retval] long* Value);
    [id(0x0000005D), helpstring("method PrintRecItemRefundVoid")]
    HRESULT _stdcall PrintRecItemRefundVoid([in] BSTR Description, [in] CURRENCY Amount, [in] long Quantity, [in] long VatInfo, [in] CURRENCY UnitAmount, [in] BSTR UnitName, [out, retval] long* Value);
  };

  [
    uuid(7AE8FCA7-C34D-4BF8-8A52-A54FA0C65D71), 
    version(1.0), 
    helpstring("ICashDrawer Interface"), 
    dual, 
    oleautomation
  ]
  interface ICashDrawer: IDispatch
  {
    [id(0x00000001), helpstring("method CheckHealth")]
    HRESULT _stdcall CheckHealth([in] long Level, [out, retval] long* Value);
    [id(0x00000002), helpstring("method Claim")]
    HRESULT _stdcall Claim([in] long Timeout, [out, retval] long* Value);
    [id(0x00000003), helpstring("method ClaimDevice")]
    HRESULT _stdcall ClaimDevice([in] long Timeout, [out, retval] long* Value);
    [id(0x00000004), helpstring("method ClearOutput")]
    HRESULT _stdcall ClearOutput([out, retval] long* Value);
    [id(0x00000005), helpstring("method Close")]
    HRESULT _stdcall Close([out, retval] long* Value);
    [id(0x00000006), helpstring("method CloseService")]
    HRESULT _stdcall CloseService([out, retval] long* Value);
    [id(0x00000007), helpstring("method COFreezeEvents")]
    HRESULT _stdcall COFreezeEvents(VARIANT_BOOL Freeze, [out, retval] long* Value);
    [id(0x00000008), helpstring("method CompareFirmwareVersion")]
    HRESULT _stdcall CompareFirmwareVersion([in] BSTR FirmwareFileName, [out] long* pResult, [out, retval] long* Value);
    [id(0x00000009), helpstring("method DirectIO")]
    HRESULT _stdcall DirectIO([in] long Command, [in, out] long* pData, [in, out] BSTR* pString, [out, retval] long* Value);
    [id(0x0000000A), helpstring("method GetPropertyNumber")]
    HRESULT _stdcall GetPropertyNumber(long PropIndex, [out, retval] long* Value);
    [id(0x0000000B), helpstring("method GetPropertyString")]
    HRESULT _stdcall GetPropertyString(long PropIndex, [out, retval] BSTR* Value);
    [id(0x0000000C), helpstring("method Open")]
    HRESULT _stdcall Open(BSTR DeviceClass, BSTR DeviceName,  IDispatch* pDispatch, [out, retval] long* Value);
    [id(0x0000000D), helpstring("method OpenDrawer")]
    HRESULT _stdcall OpenDrawer([out, retval] long* Value);
    [id(0x0000000E), helpstring("method OpenService")]
    HRESULT _stdcall OpenService(BSTR DeviceClass, BSTR DeviceName,  IDispatch* pDispatch, [out, retval] long* Value);
    [id(0x0000000F), helpstring("method Release")]
    HRESULT _stdcall Release1([out, retval] long* Value);
    [id(0x00000010), helpstring("method ReleaseDevice")]
    HRESULT _stdcall ReleaseDevice([out, retval] long* Value);
    [id(0x00000011), helpstring("method ResetStatistics")]
    HRESULT _stdcall ResetStatistics([in] BSTR StatisticsBuffer, [out, retval] long* Value);
    [id(0x00000012), helpstring("method RetrieveStatistics")]
    HRESULT _stdcall RetrieveStatistics([in, out] BSTR* pStatisticsBuffer, [out, retval] long* Value);
    [id(0x00000013), helpstring("method SetPropertyNumber")]
    HRESULT _stdcall SetPropertyNumber(long PropIndex, long Number);
    [id(0x00000014), helpstring("method SetPropertyString")]
    HRESULT _stdcall SetPropertyString(long PropIndex, BSTR Text);
    [id(0x00000015), helpstring("method UpdateFirmware")]
    HRESULT _stdcall UpdateFirmware([in] BSTR FirmwareFileName, [out, retval] long* Value);
    [id(0x00000016), helpstring("method UpdateStatistics")]
    HRESULT _stdcall UpdateStatistics([in] BSTR StatisticsBuffer, [out, retval] long* Value);
    [id(0x00000017), helpstring("method WaitForDrawerClose")]
    HRESULT _stdcall WaitForDrawerClose([in] long BeepTimeout, [in] long BeepFrequency, [in] long BeepDuration, [in] long BeepDelay, [out, retval] long* Value);
    [propget, id(0x00000018), helpstring("property OpenResult")]
    HRESULT _stdcall OpenResult([out, retval] long* Value);
  };

  [
    uuid(E7A4302D-C913-4F49-9030-A089792B8A4F), 
    version(1.0), 
    dual, 
    oleautomation
  ]
  interface IXmlParams: IDispatch
  {
    [id(0x00000001)]
    HRESULT _stdcall SetParam([in] BSTR ParamName, [in] BSTR ParamValue);
    [id(0x00000002)]
    HRESULT _stdcall GetParam([in] BSTR ParamName, [out, retval] BSTR* Value);
    [propget, id(0x00000004)]
    HRESULT _stdcall AsXml([out, retval] BSTR* Value);
    [propput, id(0x00000004)]
    HRESULT _stdcall AsXml([in] BSTR Value);
    [id(0x00000003)]
    HRESULT _stdcall AddParam([in] BSTR ParamName, [in] BSTR ParamValue);
    [id(0x00000005)]
    HRESULT _stdcall Clear(void);
  };

  [
    uuid(E3C72E1C-8AA5-451C-B13B-F5A4260F9D05), 
    version(1.0), 
    helpstring("FiscalPrinter Class")
  ]
  coclass FiscalPrinter
  {
    [default] interface IFiscalPrinterService_1_12;
  };

  [
    uuid(6F911C2A-E121-40B5-9D26-4037178555B6), 
    version(1.0), 
    helpstring("CashDrawer Class")
  ]
  coclass CashDrawer
  {
    [default] interface ICashDrawer;
  };

  [
    uuid(74BD2D4D-468D-4794-B1B0-884A0510BDE6), 
    version(1.0)
  ]
  coclass XmlParams
  {
    [default] interface IXmlParams;
  };

};