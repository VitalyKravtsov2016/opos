
--------------------------------2019/11/29 13:47:23--------------------------------
A memory block has been leaked. The size is: 20

This block was allocated by thread 0x1EB4, and the stack trace (return addresses) at the time was:
402DE8 [system.pas][System][@GetMem][2439]
403ADB [system.pas][System][TObject.NewInstance][8360]
403EB6 [system.pas][System][@ClassCreate][9019]
421B1E [classes.pas][Classes][TIntConst.Create][2359]
4F1247 [JvSegmentedLEDDisplay][RegisterSegmentedLEDDigitClass]
421B8A [classes.pas][Classes][RegisterIntegerConsts][2368]
4F43C6 [JvSegmentedLEDDisplay][initialization]
4046DB [system.pas][System][InitUnits][10845]
404743 [system.pas][System][@StartExe][10910]
4071AF [SysInit.pas][SysInit][@InitExe][668]
500AF9 [C:\projects\OPOSShtrih\Test\SmScaleTest\SmScaleTest.dpr][SmScaleTest][initialization]

The block is currently used for an object of class: TIntConst

The allocation number is: 1279

Current memory dump of 256 bytes starting at pointer address 7EE6DA90:
00 1B 42 00 0C 09 4F 00 00 42 4F 00 84 42 4F 00 D6 FB 41 8C 80 80 80 80 00 00 00 00 51 DB E6 7E
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C0 00 00 00 E8 2D 40 00 DB 3A 40 00 B6 3E 40 00
10 3B 40 00 B6 3E 40 00 26 40 44 00 0B F5 48 00 DB 46 40 00 43 47 40 00 AF 71 40 00 F9 0A 50 00
B4 1E 00 00 B4 1E 00 00 13 2E 40 00 F9 3A 40 00 01 3F 40 00 0B 24 42 00 3F 3B 40 00 68 40 44 00
3F 3B 40 00 3F F4 48 00 6B 46 40 00 46 49 40 00 3E 0B 50 00 10 00 00 00 90 F6 41 00 DA 82 E9 84
90 9C 50 00 80 80 80 80 80 80 80 80 80 80 80 80 25 7D 16 7B 80 80 80 80 00 00 00 00 D1 DD E6 7E
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C4 00 00 00 E8 2D 40 00 DB 3A 40 00 B6 3E 40 00
10 3B 40 00 A6 2E 42 00 B2 2E 42 00 90 47 4A 00 58 49 4A 00 DB 46 40 00 43 47 40 00 AF 71 40 00
.  .  B  .  .  .  O  .  .  B  O  .  Ñ  B  O  .  ÷  ˚  A  å  Ä  Ä  Ä  Ä  .  .  .  .  Q  €  Ê  ~
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ¿  .  .  .  Ë  -  @  .  €  :  @  .  ∂  >  @  .
.  ;  @  .  ∂  >  @  .  &  @  D  .  .  ı  H  .  €  F  @  .  C  G  @  .  Ø  q  @  .  ˘  .  P  .
¥  .  .  .  ¥  .  .  .  .  .  @  .  ˘  :  @  .  .  ?  @  .  .  $  B  .  ?  ;  @  .  h  @  D  .
?  ;  @  .  ?  Ù  H  .  k  F  @  .  F  I  @  .  >  .  P  .  .  .  .  .  ê  ˆ  A  .  ⁄  Ç  È  Ñ
ê  ú  P  .  Ä  Ä  Ä  Ä  Ä  Ä  Ä  Ä  Ä  Ä  Ä  Ä  %  }  .  {  Ä  Ä  Ä  Ä  .  .  .  .  —  ›  Ê  ~
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ƒ  .  .  .  Ë  -  @  .  €  :  @  .  ∂  >  @  .
.  ;  @  .  ¶  .  B  .  ≤  .  B  .  ê  G  J  .  X  I  J  .  €  F  @  .  C  G  @  .  Ø  q  @  .

--------------------------------2019/11/29 13:47:23--------------------------------
This application has leaked memory. The small block leaks are (excluding expected leaks registered by pointer):

13 - 20 bytes: TIntConst x 1

Note: Memory leak detail is logged to a text file in the same folder as this application. To disable this memory leak check, undefine "EnableMemoryLeakReporting".
